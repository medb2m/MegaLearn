import { Component, OnInit } from '@angular/core';
import { BlogService } from '@app/_services/blog.service';
import { Post } from '@app/_models/post';
import { Comment } from '@app/_models/comment'; // Assuming you have a Comment model

@Component({
  selector: 'app-user-blog',
  templateUrl: './user-blog.component.html',
  styleUrls: ['./user-blog.component.css']
})
export class UserBlogComponent implements OnInit {
  posts: Post[] = [];
  comments: Comment[] = [];

  constructor(private blogService: BlogService) { }

  ngOnInit(): void {
    this.loadPosts();
  }

  loadPosts(): void {
    this.blogService.getPosts().subscribe(
      (posts: Post[]) => {
        this.posts = posts;
      },
      (error) => {
        console.error('Error fetching posts:', error);
        // Handle error as needed
      }
    );
  }

  loadComments(postId: number): void {
    this.blogService.getCommentsForPost(postId).subscribe(
      (comments: Comment[]) => {
        this.comments = comments;
      },
      (error) => {
        console.error('Error fetching comments:', error);
        // Handle error as needed
      }
    );
  }

  addComment(postId: number, commentText: string): void {
    const newComment: Comment = {
      id: 0, // Assuming id is autogenerated by backend
      postId: postId,
      content: commentText,
      author: {
        firstName: 'User', // Replace with actual user details if available
        lastName: 'Name'  // Replace with actual user details if available
      },
      createdAt: new Date()  // Current date/time
    };
    this.blogService.addCommentToPost(postId, newComment).subscribe(
      (comment: Comment) => {
        this.comments.push(comment);
      },
      (error) => {
        console.error('Error adding comment:', error);
        // Handle error as needed
      }
    );
  }
}
